import { makeStyles, mergeClasses } from '@griffel/react';
import type { {{componentName}}Slots, {{componentName}}State } from './{{componentName}}.types';
import type { SlotClassNames } from '@eevee/react-utilities';


const {{componentNames.propertyName}}ClassName = 'eve-{{componentName}}'
const {{componentNames.propertyName}}ClassNames:SlotClassNames<{{componentName}}Slots> = {
  root: 'eve-{{componentName}}'
  // TODO: add class names for all slots on {{componentName}}Slots.
  // Should be of the form `<slotName>: 'eve-{{componentName}}__<slotName>`
};

/**
 * Styles for the root slot
 */
const useStyles = makeStyles({
  root: {
      // TODO Add default styles for the root element
  },

  // TODO add additional classes for different states and/or slots
});

/**
 * Apply styling to the {{componentName}} slots based on the state
 */
export const use{{componentName}}Styles = (state: {{componentName}}State): {{componentName}}State => {
  const styles = useStyles();
  state.root.className = mergeClasses({{componentNames.propertyName}}ClassName, styles.root, state.root.className);

  // TODO Add class names to slots, for example:
  // state.mySlot.className = mergeClasses(styles.mySlot, state.mySlot.className);

  return state;
};
